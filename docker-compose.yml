services:
  order-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: orderdb
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    ports:
      - "23306:3306"
    volumes:
      - order-db-data:/var/lib/mysql
    networks:
      - order-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      start_period: 20s

  order-api:
    build: .
    ports:
      - "8082:8082"
    depends_on:
      order-db:
        condition: service_healthy
    environment:
      ORDER_DB_URL: jdbc:mysql://order-db:3306/orderdb
      KAFKA_BOOTSTRAP_SERVERS: kafka:19092
    networks:
      - order-network
      - kafka-network
      - prometheus-network

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "22181:12181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:latest
    container_name: msa-kafka
    ports:
      - "29092:19092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:19092,INTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:19092,INTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - kafka-network  # 추가된 부분: payment-network와 연결

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - prometheus-network
    hostname: prometheus    # 호스트 이름 명시적 지정
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3005:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources    # 경로
    depends_on:
      - prometheus
    networks:
      - prometheus-network
    restart: always

networks:
  order-network:
    driver: bridge
  kafka-network:
    name: kafka-network
    driver: bridge
  prometheus-network:
    name: prometheus-network
    driver: bridge

volumes:
  order-db-data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  prometheus_data:
  grafana_data:



